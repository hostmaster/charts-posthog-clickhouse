suite: PostHog ingress definition
templates:
  - templates/ingress.yaml

tests:
  - it: should be empty if ingress.enabled is set to false
    set:
      ingress.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should have the correct apiVersion
    asserts:
      - hasDocuments:
          count: 1
      - isAPIVersion:
          of: networking.k8s.io/v1

  - it: should be the correct kind
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress

  - it: the "spec" path should match the snapshot when using default values
    asserts:
      - hasDocuments:
          count: 1
      - matchSnapshot:
          # Unfortunately we can't match the whole manifest as there are few
          # metadata values linked to the chart version
          path: spec

  - it: the "spec" path should match the snapshot when splitting decide traffic out
    set:
      decide.ingressEnabled: true
    asserts:
      - hasDocuments:
          count: 1
      - matchSnapshot:
          # Unfortunately we can't match the whole manifest as there are few
          # metadata values linked to the chart version
          path: spec

  - it: the "spec" path should match the snapshot when splitting recordings traffic out
    set:
      recordings.ingressEnabled: true
    asserts:
      - hasDocuments:
          count: 1
      - matchSnapshot:
          # Unfortunately we can't match the whole manifest as there are few
          # metadata values linked to the chart version
          path: spec

  - it: AWS - 'metadata.annotations' should match the default values
    set:
      cloud: "aws"
      ingress:
        hostname: <your-hostname>
        nginx:
          enabled: true
      cert-manager:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.annotations
          value:
            meta.helm.sh/release-name: RELEASE-NAME
            meta.helm.sh/release-namespace: NAMESPACE
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/configuration-snippet: |
              more_set_headers "Strict-Transport-Security: max-age=30; includeSubDomains";
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"

  - it: DO - 'metadata.annotations' should match the default values
    set:
      cloud: "do"
      ingress:
        hostname: <your-hostname>
        nginx:
          enabled: true
      cert-manager:
        enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.annotations
          value:
            meta.helm.sh/release-name: RELEASE-NAME
            meta.helm.sh/release-namespace: NAMESPACE
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/configuration-snippet: |
              more_set_headers "Strict-Transport-Security: max-age=30; includeSubDomains";
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"

  - it: NGINX - 'metadata.annotations' should match the default values
    set:
      ingress.nginx.enabled: true
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.annotations
          value:
            meta.helm.sh/release-name: RELEASE-NAME
            meta.helm.sh/release-namespace: NAMESPACE
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/configuration-snippet: |
              more_set_headers "Strict-Transport-Security: max-age=30; includeSubDomains";
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"

  - it: NGINX with Let's Encrypt - 'metadata.annotations' should match the default values
    set:
      ingress.nginx.enabled: true
      ingress.letsencrypt: true
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.annotations
          value:
            meta.helm.sh/release-name: RELEASE-NAME
            meta.helm.sh/release-namespace: NAMESPACE
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/configuration-snippet: |
              more_set_headers "Strict-Transport-Security: max-age=30; includeSubDomains";
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-redirect: "true"

  - it: overrides to 'metadata.annotations' via 'ingress.annotations' should work
    set:
      ingress.annotations:
        key1: value1
        key2: value2
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: metadata.annotations
          value:
            meta.helm.sh/release-name: RELEASE-NAME
            meta.helm.sh/release-namespace: NAMESPACE
            key1: value1
            key2: value2

  - it: can set hostname to empty to capture all traffic
    set:
      ingress:
        enabled: true
        hostname: ""
    asserts:
      - isNull:
          path: spec.rules[0].host
